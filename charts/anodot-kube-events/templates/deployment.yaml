apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "template_name" . }}
  labels:
    app: {{ template "template_name" . }}
    chart: {{ template "chart_name" . }}
    release: {{ .Release.Name }}
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: {{ template "template_name" . }}
      release: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "template_name" . }}
        release: {{ .Release.Name }}
    spec:
{{ if .Values.rbac.enabled }}
      serviceAccountName: anodot-kube-events
{{- end }}
      containers:
        - name: {{ template "template_name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          volumeMounts:
            - name: config-volume
              mountPath: /mnt/config.yaml
              subPath: config.yaml
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          resources:
{{ toYaml .Values.configuration.resources | indent 12 }}
          env:
          {{- range $name, $value := .Values.configuration.env }}
          - name: "{{ $name }}"
            value: "{{ $value }}"
{{- end }}

      volumes:
      - name: config-volume
        configMap:
          name: {{ template "template_name" . }}